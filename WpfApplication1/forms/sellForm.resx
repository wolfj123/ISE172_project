<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>